#include <stdio.h>
#include <conio.h>

// Function declaration
void quicksort(int list[], int low, int high);

void main() {
    int list[50];
    int size, i;

    // Input array size
    printf("Enter the number of elements: ");
    scanf("%d", &size);

    // Input array elements
    printf("Enter the elements to be sorted:\n");
    for (i = 0; i < size; i++) {
        scanf("%d", &list[i]);
    }

    // Apply quicksort
    quicksort(list, 0, size - 1);

    // Display sorted array
    printf("After applying quick sort:\n");
    for (i = 0; i < size; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");

    getch();
}

void quicksort(int list[], int low, int high) {
    int pivot, i, j, temp;

    if (low < high) {
        pivot = low;  // Set pivot element
        i = low;
        j = high;

        while (i < j) {
            // Find elements on the wrong side of the pivot
            while (list[i] <= list[pivot] && i <= high) {
                i++;
            }
            while (list[j] > list[pivot] && j >= low) {
                j--;
            }

            // Swap elements if needed
            if (i < j) {
                temp = list[i];
                list[i] = list[j];
                list[j] = temp;
            }
        }

        // Place pivot in correct position
        temp = list[j];
        list[j] = list[pivot];
        list[pivot] = temp;

        // Recursive calls for subarrays
        quicksort(list, low, j - 1);
        quicksort(list, j + 1, high);
    }
}
